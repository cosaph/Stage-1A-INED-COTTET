---
title: "Générer un nuage de mot à partir d'un texte avec R.temis"
toc-title: ""
categories:
- R
- Rstudio
author: "COTTET Coralie"
affiliations: INED

date: 06/06/2023

---

# 1. Travail préliminaire 

  Comme dans tout bon code R il est nécessaire au début d'installer (une fois sur un ordinateur): (dans le terminal de commande )
install.packages("R.temis") 
install.packages("RColorBrewer") # Palettes de couleurs
les packages recquis pour le code et de charger (à chaque fois ) les librairies requisent pour le code.


```{r warning=FALSE, message= FALSE}
library("R.temis")
```


Concernant le choix des données, j’ai choisis une publication de Mathieu Trachman datant de 2022 intitulé _“Très masculin, pas très féminine. Les variations sociales du genre”_, Population et Sociétés: 1-4, pour illustrer mon exemple.

```{r results= FALSE }

corpus <- import_corpus("texte", format="txt", language ="fr")

```


# 2. Nettoyage du texte

C'est quoi les __stop_words__?

Les stop words (ou mots vides) sont des mots très courants dans un langage donné, comme les prépositions, les articles, les pronoms, etc., qui sont souvent omis lors de l'analyse de texte car ils ne portent pas de sens important pour la compréhension globale du texte.

La fonction build_dtm est utilisée pour construire une matrice de termes-document à partir d'un corpus de textes. La matrice de termes-document est une représentation quantitative des termes présents dans un corpus de textes, où chaque ligne représente un terme et chaque colonne représente un document.

```{r results=FALSE}
# ---- traitement des données ----
dtm <-build_dtm(corpus, remove_stopwords = T, min_length = 0)

dic <-dictionary(dtm) #création d'un dictionnaire de mot 

frequent_terms(dtm) #fréquence apparition des mots dans le texte en question


```

# 3. Traitement du corpus

J'aimerai retirer le mot "a", "" et "plus" à titre d'exemple

```{r}
# Identifier l'index du mot "genre" (celui que l'on veut supprimer) dans la liste des termes
termes <- colnames(dtm)
index <- match(c("a","","plus"), termes)

# Supprimer l'index de la liste des termes
termes <- termes[-index]

# Supprimer la colonne correspondant à l'index dans la matrice
dtm <- dtm[,-index]

# Réorganiser les colonnes pour correspondre à l'ordre des termes restants
dtm <- dtm[,order(termes)]


```

# 4. Construction du Nuage


```{r}

cloud<-word_cloud(dtm, color= 'black', min.freq=1) 

```




# 5. Analyse descriptive 


La fonction terms_graph du package R.temis permet de générer un réseau de mots qui est affiché dans une fenêtre interactive igraph. Les termes ou mots sont représentés par des sommets ou nœuds dans le graphe. Leur placement dans l'espace graphique est déterminé par un algorithme d'énergie, qui prend en compte les co-occurrences des termes dans le corpus. Les liens dans le graphe représentent les co-occurrences entre les termes.
Ici,ce n'est pas très représentatif mais ça donne globalement une idée de ce que peut nous fournir un tel graphe: l'idée globale des thématiques et des sujets traités dans le corpus.

```{r}
# Créer un graphique d'analyse de co-occurrences de termes
Tree<-terms_graph(dtm, min_occ = 30, interactive = T,
            vertex.size = 0.01, vertex.color = "lightblue",
            label.cex = 0.1)



```

<img src="tree.PNG" alt="Texte alternatif de l'image" title="Titre de l'image" width=800 lenght=800/>






